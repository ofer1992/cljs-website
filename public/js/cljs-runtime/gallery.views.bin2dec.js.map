{"version":3,"sources":["gallery/views/bin2dec.cljs"],"mappings":";AAKA,mCAAA,nCAAME,8EAAYC;AAAlB,AAAA,0FAAA,sDAAA,2CAAA,qDAAA,OAAA,sDAAA,AAAAH,uBAAA,+DAAA,WAAAC,jFAEmBE;AAFnB,AAGuB,OAACC,sBAAOD,MAAM,AAAA,AAAAF;;;AAErC,4CAAA,5CAAMI,gGAAeC;AAArB,AACE,OAACC,0BAAY,AAACC,cAAIF,KAAK,cAAA,dAACE;;AAE1B,gCAAA,hCAAMC,wEAASH;AAAf,AACE,sDAAA,WAAAI,iBAAAC,3EAACC;AAAD,AAAS,QAAG,SAAAD,TAACE,6BAAgB,CAAAH,mBAAA;GAAUJ;;AAEzC,gCAAA,hCAAMQ;AAAN,AACE,IAAMR,MAAI,gDAAA,hDAACS;AAAX,AACE;AAAA,AAAA,0FAAA,mDAAA,mFAAA,8CAAA,WAAA,mFAEmBb,iCAAWI,oBAC3B,uHAAA,mFAAA,8CAAA,tPAAI,0CAAA,AAAAN,1CAACK,0DAAeC,OAClB,8BAAA,AAAAN,9BAACS,8CAASH;;;AAGnB,mCAAA,nCAAMU;AAAN,AAAA,0FACGF","names":["cljs.core/deref","p1__17861#","gallery.views.bin2dec/atom-input","value","cljs.core/reset!","gallery.views.bin2dec/valid-binary?","bin","clojure.set/subset?","cljs.core/set","gallery.views.bin2dec/bin2dec","p1__17863#","p2__17862#","cljs.core.reduce","js/parseInt","gallery.views.bin2dec/project","reagent.core.atom","gallery.views.bin2dec/main-panel"],"sourcesContent":["(ns gallery.views.bin2dec\n  (:require\n   [reagent.core :as r]\n   [clojure.set :as set]))\n\n(defn atom-input [value]\n  [:input {:type \"text\"\n           :value @value\n           :on-change #(reset! value (-> % .-target .-value))}])\n\n(defn valid-binary? [bin]\n  (set/subset? (set bin) (set \"01\")))\n\n(defn bin2dec [bin]\n  (reduce #(+ (js/parseInt %2) (* %1 2)) bin))\n\n(defn project []\n  (let [bin (r/atom \"0\")]\n    (fn []\n      [:div\n       [:p \"Binary: \" [atom-input bin]]\n       (if (valid-binary? @bin)\n         (bin2dec @bin)\n         [:p \"Bad binary rep\"])])))\n\n(defn main-panel []\n  [project])\n\n"]}