{"version":3,"sources":["gallery/core.cljs"],"mappings":";AASA,GAAA,QAAAA,oCAAAC,yCAAAC;AAAA;AAAA,AAAA,AAASC,uBAAQ,gDAAA,hDAACC;;AAGlB,wBAAA,2CAAA,2CAAA,6CAAA,3JAAKC,6EAAoBC,4CACCC,8CACCC;AAG3B,+BAAA,/BAAMC,sEAAiBC;AAAvB,AAAA,0FAAA,mDAAA,mFAAA,oFAAA,nCAES,AAACC,gBAAMD,sGACX,AAACE,iBAAOF;;AAEb,0BAAA,1BAAMG;AAAN,AAAA,0FAAA,mDAAA,mFAAA,sEAAA,mFAAA,iDAAA,mBAAA,mFAAA,kDAIS,iBAAAC,qBAAA,gDAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBAk7E0C,AAAAuB,sBAAA5B;IAl7E1CM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,IAAAK,aAAA,AAAAC,eAAAP,gBAAAK;WAAA,AAAAG,4CAAAF,WAAA,IAAA,lEAAOW;gBAAP,AAAAT,4CAAAF,WAAA,IAAA,vEAAYhB;AAAZ,AAAA,AAAA,AAAAmB,uBAAAN,SAAA,oBAAA,mFAAA,sDAAA,2CAAA,qDAAA,IAAA,6DAAA;;AAAA,AAC4C,kDAAA,3CAACe,sBAAOnC,wGAASkC,KAAK3B;;sBADlE,2CAAA,oDACS2B,5GAAsEA;;AAD/E,eAAA,CAAAZ,WAAA;;;;AAAA;;;;;AAAA,OAAAK,qBAAA,AAAAC,gBAAAR,UAAA,AAAAS,sCAAA,AAAAC,qBAAAlB;;AAAA,OAAAe,qBAAA,AAAAC,gBAAAR,UAAA;;;AAAA,IAAAW,aAAA,AAAAvB,gBAAAI;WAAA,AAAAa,4CAAAM,WAAA,IAAA,lEAAOG;gBAAP,AAAAT,4CAAAM,WAAA,IAAA,vEAAYxB;AAAZ,AAAA,OAAAyB,eAAA,oBAAA,mFAAA,sDAAA,2CAAA,qDAAA,IAAA,6DAAA;;AAAA,AAC4C,kDAAA,3CAACG,sBAAOnC,wGAASkC,KAAK3B;;sBADlE,2CAAA,kEAAA,AAAAsB,sCAAA,AAAAI,eAAArB,nEACSsB,5GAAsEA;;;AAD/E;;;;GAAA,KAAA;;AAAA,AAAA,OAAAvB,mBAAuBT;qBAJhC,mFAAA,mEAQI,kBAAA,AAAAkC,uCAAA,AAAA,gHAAA,AAAAA,8CAAA,rLAAOpC,0GACJM,6CAAiBN;;AAExB,oBAAA,pBAAeqC;AAAf,AACE,wDAAA,jDAACC,oIAAa5B,gCAAY,wBAAA,xBAAC6B;;;AAE7B","names":["js/gallery","js/gallery.core","js/gallery.core.project","gallery.core/project","reagent.core.atom","gallery.core/projects","gallery.views.bin2dec/main-panel","gallery.views.json2csv/main-panel","gallery.views.flattener/main-panel","gallery.core/display-project","component","cljs.core/first","cljs.core/second","gallery.core/main-panel","iter__5523__auto__","s__18993","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__18995","cljs.core/chunk-buffer","i__18994","vec__18996","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__18992","cljs.core/chunk-rest","vec__18999","cljs.core/cons","cljs.core/rest","text","cljs.core/reset!","cljs.core/deref","gallery.core/main","reagent.dom.render","js/document.getElementById","cljs.core/chunk-first"],"sourcesContent":["(ns gallery.core\n  (:require\n   [reagent.dom :as rdom]\n   [reagent.core :as r]\n   [gallery.views.bin2dec :as bin2dec]\n   [gallery.views.json2csv :as json2csv]\n   [gallery.views.flattener :as flattener]\n   ))\n;; define a state atom that determines which project is displayed\n(defonce project (r/atom nil))\n\n;; map of projects availble\n(def projects {\"bin2dec\" bin2dec/main-panel\n               \"json2csv\" json2csv/main-panel\n               \"flattener\" flattener/main-panel})\n\n\n(defn display-project [component]\n  [:div \n    [:h2 (first component)]\n    [(second component)]])\n\n(defn main-panel []\n  [:div\n   [:div.side-bar\n    [:h3 \"Projects\"]\n    [:ul (for [[text component] projects]\n           ^{:key text} [:li>a {:href \"#\" :on-click #(reset! project [text component])} text])]]\n   ;; if project is not nil, display it\n   [:div.content\n    (when @project\n      [display-project @project])]])\n\n(defn ^:export main []\n  (rdom/render [main-panel] (js/document.getElementById \"app\")))\n\n(comment\n  (defn create-header-element [text]\n    (let [el (.createElement js/document \"h1\")]\n      (set! (.-innerHTML el) text)\n      el)) \n  (create-header-element \"Hello, Reagent\")\n  (-> (.getElementById js/document \"app\")\n      (.appendChild (create-header-element \"Adding a header element\")))\n\n  (-> (.getElementById js/document \"app\") (.-innerHTML)\n      (set! \"Hello, World!\"))\n  :rcf)"]}